@model HumanResourcesManagmentCapstone.ViewModel.CertificationViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Certification</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Education type </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <fieldset class="fieldset-border">
            <div class="form-horizontal">
                <legend class="legend-border">Certification</legend>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CertificationType, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.CertificationType, "Select Certification Type", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CertificationType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control", @placeholder = "MIS" } })
                            @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GPA, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.GPA, new { htmlAttributes = new { @class = "form-control", @placeholder = "4.1" } })
                            @Html.ValidationMessageFor(model => model.GPA, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
        </fieldset>

        <fieldset class="fieldset-border">
            <div class="form-horizontal">
                <legend class="legend-border">Duration</legend>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
        </fieldset>

        <fieldset class="fieldset-border">
            <div class="form-horizontal">
                <legend class="legend-border">University</legend>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UniversityRank, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UniversityRank, new { htmlAttributes = new { @class = "form-control", @placeholder = "100" } })
                            @Html.ValidationMessageFor(model => model.UniversityRank, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Extracurricular, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Extracurricular, new { htmlAttributes = new { @class = "form-control", @placeholder = "Chess Club" } })
                            @Html.ValidationMessageFor(model => model.Extracurricular, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.InternationalUniversity,  htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.InternationalUniversity, "No", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.InternationalUniversity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
        </fieldset>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default box-shadow--4dp" />
            </div>
        </div>
    </div>
}
                <div>
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-sm box-shadow--4dp" })
                </div>


                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('input[type=datetime]').datepicker({
                                dateFormat: 'yy-mm-dd',
                                maxDate: 0,
                                buttonText: "Choose"
                            });
                        });
                    </script>
                }
